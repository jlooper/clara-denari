---
import Layout from '../layouts/Layout.astro';
import GameLayout from '../components/GameLayout.astro';
import NotificationPanel from '../components/NotificationPanel.astro';
import { translations } from '../i18n/translations.js';

const title = 'page.the_well';
const backdrop = "https://res.cloudinary.com/dr60nybtj/image/upload/fl_c2pa/v1757945277/cd_well.png"; 

// Check if all 5 items have been collected
const checkAllItemsCollected = () => {
  if (typeof window !== 'undefined') {
    const inventoryItems = JSON.parse(localStorage.getItem('inventory_item') || '{}');
    const allItemsCollected = ['1', '2', '3', '4', '5'].every(itemId => inventoryItems[itemId] === true);
    return allItemsCollected;
  }
  return false;
};
---

<Layout title={title} backdrop={backdrop} fullScreenLayout={true}>
  <div class="prose max-w-none">
    <!-- Main content area with image and inventory side by side -->
    <GameLayout title={title} backdrop={backdrop} />
    
    <!-- Full width storyline -->
    <div class="w-full mb-6">
      <h2 id="page-title" class="text-2xl font-bold text-blue-400 mb-4 shadow-lg" data-page-key="the_well">
        Ronan Park Well
      </h2>
      
          <div class="bg-black bg-opacity-50 border-2 border-blue-500 rounded-lg p-6 mb-6">
        <div class="text-gray-100 text-lg leading-relaxed">
          <p class="mb-4" data-translation-key="the_well.story.decoded_message">
            You've successfully decoded the hidden message and found your way to Ronan Park Well.
          </p>
          
          <p class="mb-4" data-translation-key="the_well.story.clara_discovers">
            Clara pulls up the well's bucket, discovers a metal box inside, and opens it with the brass key.
          </p>
          
          <!-- Success message - only shown when all items are collected -->
          <div id="success-message" class="bg-green-900 bg-opacity-30 border border-green-500 rounded p-4 mt-6 hidden">
            <h3 class="text-green-400 font-bold text-xl mb-2" data-translation-key="the_well.success.title">üéâ Case Solved!</h3>
            <p class="text-green-200" data-translation-key="the_well.success.message">
              Eureka! The stolen necklace is safe and sound and can be returned to its rightful owner. Congratulations on completing your first Clara Denari Adventure.
            </p>
          </div>
          
          <!-- Message shown when items are missing -->
          <div id="incomplete-message" class="bg-red-900 bg-opacity-30 border border-red-500 rounded p-4 mt-6">
            <h3 class="text-red-400 font-bold text-xl mb-2" data-translation-key="the_well.incomplete.title">üîç Investigation Incomplete</h3>
            <p class="text-red-200 mb-3" data-translation-key="the_well.incomplete.message">
              You've found the well, but you haven't collected all the necessary evidence yet. 
              Clara needs all items from her investigation to solve this case properly.
            </p>
            <div class="text-red-300 text-sm">
              <p class="font-semibold mb-2" data-translation-key="the_well.incomplete.items_needed">Items still needed:</p>
              <ul id="missing-items" class="list-disc list-inside space-y-1">
                <!-- Will be populated by JavaScript -->
              </ul>
            </div>
          </div>
        </div>
      </div>
    </div>
    
    <!-- Notification Panel -->
    <NotificationPanel />
    
    <!-- Final Action -->
    <div class="w-full flex justify-center">
      <div class="text-center">
        <button 
          id="return-button"
          onclick="window.location.href='/'"
          class="px-8 py-4 bg-gradient-to-br from-blue-600 to-purple-600 text-white rounded-lg hover:from-blue-500 hover:to-purple-500 transition-all duration-200 font-bold text-lg shadow-lg"
          data-translation-key="the_well.return_button"
        >
          üè† Return to Start
        </button>
      </div>
    </div>
  </div>
</Layout>

<script define:vars={{ translations }}>
  document.addEventListener('DOMContentLoaded', () => {
    function getCurrentLanguage() {
      return localStorage.getItem('preferred-language') || 'en';
    }

    function getTranslation(key) {
      const currentLang = getCurrentLanguage();
      const fallbackLang = currentLang === 'pt-br' ? 'en' : currentLang;
      return translations[key]?.[fallbackLang] || translations[key]?.en || key;
    }

    function getItemName(itemId) {
      const key = `the_well.item.${itemId}`;
      return getTranslation(key);
    }

    function updateAllText() {
      // Update page title
      const titleElement = document.getElementById('page-title');
      if (titleElement) {
        const text = getTranslation('page.the_well');
        titleElement.textContent = text;
      }

      // Update all elements with data-translation-key
      const elements = document.querySelectorAll('[data-translation-key]');
      elements.forEach(element => {
        const key = element.getAttribute('data-translation-key');
        if (key) {
          const text = getTranslation(key);
          element.textContent = text;
        }
      });

      // Update missing items list if it exists
      updateMissingItemsList();
    }

    function updateMissingItemsList() {
      const missingItemsList = document.getElementById('missing-items');
      if (!missingItemsList) return;

      // Get inventory items
      const inventoryItems = JSON.parse(localStorage.getItem('inventory_item') || '{}');
      
      // Check which items are missing
      const missingItems = [];
      const allItemIds = ['1', '2', '3', '4', '5'];
      
      allItemIds.forEach(itemId => {
        if (inventoryItems[itemId] !== true) {
          missingItems.push(getItemName(itemId));
        }
      });
      
      // Clear existing list
      missingItemsList.innerHTML = '';
      
      // Populate with translated item names
      missingItems.forEach(itemName => {
        const li = document.createElement('li');
        li.textContent = itemName;
        missingItemsList.appendChild(li);
      });
    }

    // Initial load
    updateAllText();

    // Listen for language changes
    window.addEventListener('language-changed', updateAllText);
    document.addEventListener('language-changed', updateAllText);
  });
</script>

<script>
  // Check inventory and show appropriate message
  document.addEventListener('DOMContentLoaded', () => {
    const successMessage = document.getElementById('success-message');
    const incompleteMessage = document.getElementById('incomplete-message');
    
    // Check if elements exist
    if (!successMessage || !incompleteMessage) {
      console.error('Required DOM elements not found');
      return;
    }
    
    // Get inventory items
    const inventoryItems = JSON.parse(localStorage.getItem('inventory_item') || '{}');
    
    // Check which items are missing
    const missingItems = [];
    const allItemIds = ['1', '2', '3', '4', '5'];
    
    allItemIds.forEach(itemId => {
      if (inventoryItems[itemId] !== true) {
        (missingItems as any[]).push(itemId);
      }
    });
    
    if (missingItems.length === 0) {
      // All items collected - show success message
      successMessage.classList.remove('hidden');
      incompleteMessage.classList.add('hidden');
    } else {
      // Items missing - show incomplete message
      successMessage.classList.add('hidden');
      incompleteMessage.classList.remove('hidden');
    }
  });
</script>