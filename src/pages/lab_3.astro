---
import Layout from '../layouts/Layout.astro';
import GameLayout from '../components/GameLayout.astro';
import NotificationPanel from '../components/NotificationPanel.astro';
import { translations } from '../i18n/translations.js';

const title = 'page.lab_3';
const backdrop = "https://res.cloudinary.com/dr60nybtj/image/upload/fl_c2pa/v1757718913/lab_key.png";
---

<Layout title={title} backdrop={backdrop} fullScreenLayout={true}>
  <div class="prose max-w-none">
    <!-- Main content area with image and inventory side by side -->
    <GameLayout title={title} backdrop={backdrop} imageClass="lg:w-1/3 md:w-1/3" />
    
    <!-- Full width storyline -->
    <div class="w-full mb-6">
      <h2 id="page-title" class="text-2xl font-bold text-blue-400 mb-4 shadow-lg" data-page-key="lab_3">
        Lab 3: Clean a key
      </h2>
      
      <div class="bg-black bg-opacity-50 border-2 border-blue-500 rounded-lg p-6 mb-6">
        <div class="text-gray-100 text-lg leading-relaxed" style="text-shadow: 0 0 3px rgba(0, 255, 0, 0.5);" id="lab-instructions">
          <!-- Instructions will be loaded via i18n -->
        </div>
        
       
      </div>
    </div>
    
    <!-- Notification Panel -->
    <NotificationPanel />
    
    <!-- Lab Button -->
    <div class="w-full flex flex-col sm:flex-row gap-4 justify-center">
      <button 
        id="sandbox-btn"
        class="bg-gradient-to-br from-gray-800 to-gray-900 text-gray-400 border-2 border-blue-600 px-6 py-3 text-lg rounded-lg hover:from-amber-700 hover:to-amber-800 hover:text-white transition-all duration-200 shadow-lg font-bold"
        style="text-shadow: 0 2px 4px rgba(0, 0, 0, 0.8);"
      >
        ðŸ§ª Lab
      </button>
    </div>
    
  
  </div>
</Layout>

<script>
  // Import translations
  import { translations } from '../i18n/translations.js';
  
  // Check if lab is completed and show continue button
  document.addEventListener('DOMContentLoaded', () => {
    // Load translated instructions
    function loadInstructions() {
      const instructionsElement = document.getElementById('lab-instructions');
      if (instructionsElement) {
        const currentLang = localStorage.getItem('preferred-language') || 'en';
        const translation = translations['lab.3.instructions'];
        const text = translation[currentLang] || translation['en'];
        instructionsElement.innerHTML = text;
      }
    }
    
    function checkLabCompletion() {
      const results = JSON.parse(localStorage.getItem('labResults') || '[]');
      const labCompleted = results.some((result: any) => result.lab === 'Lab 3' && result.correct === true);
      
      const continueSection = document.getElementById('continue-section');
      if (continueSection) {
        if (labCompleted) {
          continueSection.style.display = 'flex';
        } else {
          continueSection.style.display = 'none';
        }
      }
    }
    
    // Load instructions and check completion on page load
    loadInstructions();
    checkLabCompletion();
    
    // Listen for lab completion events
    window.addEventListener('labCompleted', checkLabCompletion);
    
    // Listen for language changes
    window.addEventListener('language-changed', loadInstructions);
    
    // Also check periodically in case localStorage is updated from another tab
    setInterval(checkLabCompletion, 1000);
    
    // Load translated title
    function loadTitle() {
      const titleElement = document.getElementById('page-title');
      if (titleElement) {
        const currentLang = localStorage.getItem('preferred-language') || 'en';
        const fallbackLang = currentLang === 'pt-br' ? 'en' : currentLang;
        const translation = translations['page.lab_3'];
        const text = translation[fallbackLang] || translation['en'] || 'Lab 3: Clean a key';
        titleElement.textContent = text;
      }
    }
    loadTitle();
    window.addEventListener('language-changed', loadTitle);
  });
</script> 