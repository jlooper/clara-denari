---
export interface Props {
  id?: string;
  class?: string;
}

const { id = "notification-panel", class: className = "" } = Astro.props;
---

<div 
  id={id} 
  class={`notification-panel w-full mb-6 p-4 border-2 border-blue-600 rounded-lg bg-black bg-opacity-50 text-gray-400 hidden relative ${className}`}
  style="text-shadow: 0 2px 4px rgba(0, 0, 0, 0.8); background: linear-gradient(135deg, #2a1f1a 0%, #1a1410 25%, #0f0a08 50%, #0a0705 75%, #050302 100%);"
>
  <button 
    id="notification-close" 
    class="text-gray-100 hover:text-gray-200 text-2xl font-bold leading-none w-8 h-8 flex items-center justify-center rounded-full hover:bg-amber-600 hover:bg-opacity-30 transition-colors z-10"
    aria-label="Close notification"
    style="line-height: 1; display: flex; align-items: center; justify-content: center;"
  >Ã—</button>
  <div class="flex items-center gap-3 pr-8">
    <span id="notification-message" class="text-lg text-gray-100 leading-relaxed"></span>
  </div>
</div>

<style>
  /* Style links in notification panel */
  #notification-message a {
    color: #3b82f6;
    text-decoration: underline;
    font-weight: bold;
    transition: color 0.2s ease;
  }
  
  #notification-message a:hover {
    color: #60a5fa;
    text-shadow: 0 0 5px rgba(59, 130, 246, 0.5);
  }
  
  #notification-message a:visited {
    color: #8b5cf6;
  }
</style>

<script>
  // Global notification function
  (window as any).showNotificationPanel = (message: string) => {
    const panel = document.getElementById('notification-panel');
    const messageEl = document.getElementById('notification-message');
    
    if (panel && messageEl) {
      // Use innerHTML to support HTML links and formatting
      messageEl.innerHTML = message;
      panel.classList.remove('hidden');
    }
  };

  // Initialize when DOM is loaded
  document.addEventListener('DOMContentLoaded', () => {
    const closeButton = document.getElementById('notification-close');
    const panel = document.getElementById('notification-panel');
    
    if (closeButton && panel) {
      closeButton.addEventListener('click', () => {
        panel.classList.add('hidden');
      });
    }
  });
</script>
